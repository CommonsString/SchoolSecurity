<template>
  <div>
    <p slot="title">位置：学校用户审核</p>
    <a herf="#" slot="extra"></a>
    <Form :model="formValidate" :label-width="60" inline>
      <Tabs :animated="false">
        <Tab-pane label="输入查询条件">
          <Form-item label="用户名" prop="account">
            <Input v-model="formValidate.account" placeholder="" style="width:220px"></Input>
          </Form-item>

          <Form-item label="真实姓名" prop="name">
            <Input v-model="formValidate.name" placeholder="" style="width:220px"></Input>
          </Form-item>

          <Form-item label="手机号码" rop="tel">
            <Input v-model="formValidate.tel" placeholder="" style="width:220px"></Input>
          </Form-item>
          <Button type="primary" @click="searchUser">查询</Button>
          <Button type="primary" @click="addU">新增</Button>
          <br>
          <Table border :columns="columns7" :data="datas" stripe></Table>
        </Tab-pane>
      </Tabs>
    </Form>
    <div style="margin: 10px;overflow: hidden">
      <br>
      <p style="float:right">
        <Page :total="numtotal" :current="currentpage" @on-change="change"></Page>
      </p>
      <div cladata5="plabel">
        <p>共{{ numtotal }}条记录，当前显示第{{ currentpage }}页</p>
      </div>
    </div>
    <AddUser ref="increaseuser" @handSave="save"></AddUser>
  </div>
</template>
<script>
import AddUser from "@/components/AddUser";
export default {
  components: { AddUser },
  created() { 
    this.tabledata();
  },
  props: ['userInfo'],
  data() {
    return {
      uId: '',
      formValidate: {
        account: '',
        name: '',
        tel: '',
        status: ''
      },
      currentpage: '1',
      numtotal: '20',
      datas: [],
      columns7: [
        {
          title: '编号',
          type: 'index',
          width: 100,
          align: 'center'
        },
        {
          title: '用户名',
          key: 'account',
          width: 150,

        },
        {
          title: '真实姓名',
          key: 'name',
          width: 120


        },
        {
          title: '手机号码',
          key: 'tel',
          width: 150,
          align: 'center'
        },
        {
          title: '申请时间',
          key: 'update',
          width: 210,
          align: 'center',
          render: (h, params) => {
            let s = this.dateFormat(this.datas[params.index].update);
            let str = h('span', {}, s);
            return str;
          }

        },
        {
          title: '操作',
          key: 'action',
          align: 'center',
          width: 300,
          render: (h, params) => {
            return h('div', [
              h('Button', {
                props: {
                  type: 'text',
                  size: 'small',
                },
                style: {
                  color: '#5cadff',
                },
                on: {
                  click: () => {
                    this.resetPassword(params.index)
                  }
                }
              }, '重置密码'),
              h('Button', {
                props: {
                  type: 'text',
                  size: 'small',
                },
                style: {
                  color: '#5cadff',
                },
                on: {
                  click: () => {
                    this.offLine(params.index)
                  }
                }
              }, '强制下线'),
              h('Button', {
                props: {
                  type: 'text',
                  size: 'small',
                },
                style: {
                  color: '#5cadff',
                },
                on: {
                  click: () => {
                    this.removeUser(params.index)
                  }
                }
              }, '删除用户'),
              h('Button', {
                props: {
                  type: 'text',
                  size: 'small',
                },
                style: {
                  color: '#5cadff',
                },
                on: {
                  click: () => {
                    this.resetDepartment(params.index)
                  }
                }
              }, '重置部门'),
            ]);
          }
        }
      ],
    }
  },
  methods: {
    //重置密码
    resetPassword(index) {
      this.$http.post(
        'http:/\/localhost:8099/SafeCDTU/infoSearchAndFix/resetPassword',
        {
          // uId: ''
          uId: this.datas[index].uId
        },
        { emulateJSON: true }
      )
        .then(function(res) {
          if (res.data.state == true) {
            this.$Message.success(res.data.message)
          } else {
            this.$Message.error(res.data.message)
          }
        })
        .catch(function(err) {
          this.$Message.error('系统连接失败!' + err)
        })
    },
    //强制下线
    offLine(index) {
      this.$Modal.confirm({
        content: '<p>确认对该用户进行强制下线？</p>',
        onOk: () => {
          this.$http.post(
            'http:/\/localhost:8099/SafeCDTU/infoSearchAndFix/offLine',
            {
              // uId: ''
              uId: this.datas[index].uId
            },
            { emulateJSON: true }
          )
            .then(function(res) {
              if (res.data.state == true) {
                this.$Message.success(res.data.message)
              }
              else {
                this.$Message.error(res.data.message);
              }
            })
            .catch(function(err) {
              this.$Message.error('系统连接失败!' + err)
            });
        }
      });
    },
    //删除用户
    removeUser(index) {
      this.$Modal.confirm({
        content: '<p>确认删除该用户？</p>',
        onOk: () => {
          this.$http.post(
            'http:/\/localhost:8099/SafeCDTU/infoSearchAndFix/removeUser',
            {
              uId: this.datas[index].uId
            },
            { emulateJSON: true }
          )
            .then(function(res) {

              if (res.data.state == true) {

                this.$Message.success(res.data.message)//前端删除
                this.datas.splice(index, 1);
              }
              else {
                this.$Message.error(res.data.message);
              }
            })
            .catch(function(err) {
              this.$Message.error('系统连接失败!' + err)
            });
        }
      });
    },
    //重置部门
    resetDepartment(index) {
      this.$http.post(
        'http:/\/localhost:8099/SafeCDTU/infosearchUserAndFix/resetDepartment',
        {
          // uId: ''
          uId: this.datas[index].uId
        },
        { emulateJSON: true }
      )
        .then(function(res) {
          if (res.data.state == true) {
            this.$Message.success(res.data.message)
          } else {
            this.$Message.error(res.data.message)
          }
        })
        .catch(function(err) {
          this.$Message.error('系统连接失败!' + err)
        })
    },
    //查询用户
    searchUser() {
      this.getDates()
    },
    getDates() {
      this.$http.post(
        'http:/\/localhost:8099/SafeCDTU/infoSearchAndFix/searchUser',
        {
          account: this.formValidate.account,
          name: this.formValidate.name,
          tel: this.formValidate.tel,
          page: this.currentpage
        },
        { emulateJSON: true }
      )
        .then(function(res) {
          if (res.data.state == true) {
            this.$Message.success(res.data.message)
            this.numtotal = res.data.total,
              this.datas = res.data.userList
            console.log(res);
          }
          else {
            this.$Message.error(res.data.message)
            this.datas = ''
          }
        })
        .catch(function(err) {
          this.$Message.error('系统连接失败!' + err)
        })
    },
    //新增用户
    addU() {
      this.$refs.increaseuser.show()
    },
    save(newUser) {
      this.$refs.increaseuser.hide() //调用定义在子组件中的方法hide   
      this.datas.push({ account: newUser.account, name: newUser.name, tel: newUser.tel })
    },
    //将页码发送给后端，得到返回列表
    tabledata() {
      // while (this.datas.length > 0) this.datas.shift();
      let data = [];
      for (let i = 0; i < 10; i++) {
        data.push({
          account: '',
          name: '',
          tel: '',
          update: new Date(),
        })
      }
      this.datas = data.map(function(item) {
        return item
      });
    },
    dateFormat(date) {
      const y = date.getFullYear();
      let m = date.getMonth() + 1;
      m = m < 10 ? '0' + m : m;
      let d = date.getDate();
      d = d < 10 ? ('0' + d) : d;
      return y + '-' + m + '-' + d;
    },
    change(page) {
      this.currentpage = page;
      // this.tabledata()
      this.$http.post(
        'http:/\/localhost:8099/SafeCDTU/infoSearchAndFix/searchUser',
        {
          account: this.formValidate.account,
          name: this.formValidate.name,
          tel: this.formValidate.tel,
          page: this.currentpage,
          depId: this.userInfo.depId
        },
        { emulateJSON: true }
      )
        .then(function(res) {
          if (res.data.state == true) {
            // this.$Message.success("查询成功")
            this.numtotal = res.data.total,
              this.datas = res.data.userList
            console.log(res);
          }
          else
            this.$Message.error(res.data.message)
        })
        .catch(function(err) {
          this.$Message.error('系统连接失败!' + err)
        })

    }
  }
}
</script>
<style  scoped>

</style>
